"use strict";(self.webpackChunkplatforminfo_documentation=self.webpackChunkplatforminfo_documentation||[]).push([[827],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),f=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=f(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=f(r),m=o,d=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return r?n.createElement(d,a(a({ref:t},s),{},{components:r})):n.createElement(d,a({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var f=2;f<i;f++)a[f]=r[f];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2175:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>f});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:2},a="Using PlatformInfo",l={unversionedId:"usage",id:"usage",title:"Using PlatformInfo",description:"Prerequisites:",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/docs/usage",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installing PlatformInfo",permalink:"/docs/intro"},next:{title:"Platform values",permalink:"/docs/category/platform-values"}},p={},f=[{value:"Prerequisites:",id:"prerequisites",level:2},{value:"Importing PlatformInfo and initializing a Platform",id:"importing-platforminfo-and-initializing-a-platform",level:2}],s={toc:f},u="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-platforminfo"},"Using PlatformInfo"),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PlatformInfo installed (see previous guide).",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If you are downloading PlatformInfo.py manually, please place the file in the same folder as your code"),(0,o.kt)("li",{parentName:"ul"},"If you are using pip or the wheel from PyPi/GitHub, you are good to go!")))),(0,o.kt)("h2",{id:"importing-platforminfo-and-initializing-a-platform"},"Importing PlatformInfo and initializing a Platform"),(0,o.kt)("p",null,"To import PlatformInfo, add ",(0,o.kt)("inlineCode",{parentName:"p"},"import platforminfo")," to the top of your code. "),(0,o.kt)("p",null,"To initialize PlatformInfo, create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"Platform")," object. To do this, assign ",(0,o.kt)("inlineCode",{parentName:"p"},"platforminfo.Platform()")," to a variable. This runs a quick platform check (to allow the code to determine stats such as kernel version and OS version without checking the platform every time)."))}c.isMDXComponent=!0}}]);